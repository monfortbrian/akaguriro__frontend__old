{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar createPortalContainer = exports.createPortalContainer = function createPortalContainer(tag) {\n  var portal = document.createElement(tag);\n  document.body.appendChild(portal);\n  return portal;\n};\n\nvar removePortalContainer = exports.removePortalContainer = function removePortalContainer(portal) {\n  document.body.removeChild(portal);\n};\n\nvar fetchImage = exports.fetchImage = function fetchImage(image, cb) {\n  var src = image.src,\n      srcSet = image.srcSet,\n      sizes = image.sizes;\n  var img = new Image();\n\n  var onLoad = function onLoad() {\n    cb(img);\n    /**\n     * If using srcset, future resize events can trigger\n     * additional onload events to fire.\n     * Remove listener after first load\n     */\n\n    img.removeEventListener('load', onLoad);\n  };\n\n  img.addEventListener('load', onLoad);\n  img.src = src;\n  if (srcSet) img.srcset = srcSet;\n  if (sizes) img.sizes = sizes;\n};\n/**\n * Figure out how much to scale based\n * solely on no maxing out the browser\n */\n\n\nvar getScale = exports.getScale = function getScale(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      zoomMargin = _ref.zoomMargin;\n  var scaleX = window.innerWidth / (width + zoomMargin);\n  var scaleY = window.innerHeight / (height + zoomMargin);\n  return Math.min(scaleX, scaleY);\n};\n/**\n * Figure out how much to scale so you're\n * not larger than the original image\n */\n\n\nvar getMaxDimensionScale = exports.getMaxDimensionScale = function getMaxDimensionScale(_ref2) {\n  var width = _ref2.width,\n      height = _ref2.height,\n      naturalWidth = _ref2.naturalWidth,\n      naturalHeight = _ref2.naturalHeight,\n      zoomMargin = _ref2.zoomMargin;\n  var scale = getScale({\n    width: naturalWidth,\n    height: naturalHeight,\n    zoomMargin: zoomMargin\n  });\n  var ratio = naturalWidth > naturalHeight ? naturalWidth / width : naturalHeight / height;\n  return scale > 1 ? ratio : scale * ratio;\n};\n\nvar isMaxDimension = exports.isMaxDimension = function isMaxDimension(img) {\n  return img.clientWidth >= img.naturalWidth || img.clientHeight >= img.naturalHeight;\n};","map":{"version":3,"sources":["/Users/brian/Downloads/AKAGURIRO__revamp/frontend/node_modules/react-medium-image-zoom/lib/helpers.js"],"names":["Object","defineProperty","exports","value","createPortalContainer","tag","portal","document","createElement","body","appendChild","removePortalContainer","removeChild","fetchImage","image","cb","src","srcSet","sizes","img","Image","onLoad","removeEventListener","addEventListener","srcset","getScale","_ref","width","height","zoomMargin","scaleX","window","innerWidth","scaleY","innerHeight","Math","min","getMaxDimensionScale","_ref2","naturalWidth","naturalHeight","scale","ratio","isMaxDimension","clientWidth","clientHeight"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar createPortalContainer = exports.createPortalContainer = function createPortalContainer(tag) {\n  var portal = document.createElement(tag);\n  document.body.appendChild(portal);\n  return portal;\n};\n\nvar removePortalContainer = exports.removePortalContainer = function removePortalContainer(portal) {\n  document.body.removeChild(portal);\n};\n\nvar fetchImage = exports.fetchImage = function fetchImage(image, cb) {\n  var src = image.src,\n      srcSet = image.srcSet,\n      sizes = image.sizes;\n\n  var img = new Image();\n  var onLoad = function onLoad() {\n    cb(img);\n\n    /**\n     * If using srcset, future resize events can trigger\n     * additional onload events to fire.\n     * Remove listener after first load\n     */\n    img.removeEventListener('load', onLoad);\n  };\n  img.addEventListener('load', onLoad);\n  img.src = src;\n  if (srcSet) img.srcset = srcSet;\n  if (sizes) img.sizes = sizes;\n};\n\n/**\n * Figure out how much to scale based\n * solely on no maxing out the browser\n */\nvar getScale = exports.getScale = function getScale(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      zoomMargin = _ref.zoomMargin;\n\n  var scaleX = window.innerWidth / (width + zoomMargin);\n  var scaleY = window.innerHeight / (height + zoomMargin);\n  return Math.min(scaleX, scaleY);\n};\n\n/**\n * Figure out how much to scale so you're\n * not larger than the original image\n */\nvar getMaxDimensionScale = exports.getMaxDimensionScale = function getMaxDimensionScale(_ref2) {\n  var width = _ref2.width,\n      height = _ref2.height,\n      naturalWidth = _ref2.naturalWidth,\n      naturalHeight = _ref2.naturalHeight,\n      zoomMargin = _ref2.zoomMargin;\n\n  var scale = getScale({\n    width: naturalWidth,\n    height: naturalHeight,\n    zoomMargin: zoomMargin\n  });\n  var ratio = naturalWidth > naturalHeight ? naturalWidth / width : naturalHeight / height;\n  return scale > 1 ? ratio : scale * ratio;\n};\n\nvar isMaxDimension = exports.isMaxDimension = function isMaxDimension(img) {\n  return img.clientWidth >= img.naturalWidth || img.clientHeight >= img.naturalHeight;\n};"]},"metadata":{},"sourceType":"script"}